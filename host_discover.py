#!/usr/bin/env python3

# A host discovery program I made alongside the course instructor while learning to make Python pentesting tools
# I modernized and updated the orginal script for Python3

import argparse
from scapy.layers.l2 import Ether, ARP, srp


def get_args():
    parser = argparse.ArgumentParser(description="Simple ARP Scanner")
    parser.add_argument("-t", "--target", dest="target", required=True, help="IP address or range to scan")
    return parser.parse_args()


def scan(ip):
    arp_request = ARP(pdst=ip)
    broadcast = Ether(dst="ff:ff:ff:ff:ff:ff")
    arp_request_broadcast = broadcast / arp_request
    answered_list = srp(arp_request_broadcast, timeout=3, verbose=False)[0]

    hosts_list = []
    for item in answered_list:
        if isinstance(item, tuple) and len(item) >= 2:
            host_dict = {"ip": item[1].psrc, "mac": item[1].hwsrc}
            hosts_list.append(host_dict)
        else:
            print(f"Unexpected item format: {item}")
    return hosts_list


def print_results(result_list):
    print("\nIP\t\tMAC Address\n---------------------------------")
    for host in result_list:
        print(f"{host['ip']}\t{host['mac']}")
    print("---------------------------------")


def main():
    args = get_args()
    scan_result = scan(args.target)
    print_results(scan_result)


if __name__ == "__main__":
    main()

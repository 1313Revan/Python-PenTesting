#!/usr/bin/env python3

import argparse
import random
import re
import subprocess


def get_args():
    parser = argparse.ArgumentParser(description="MAC Address Changer")
    parser.add_argument("-i", "--interface", dest="interface", required=True,
                        help="Network interface to change MAC address")
    parser.add_argument("-m", "--mac", dest="mac", help="New MAC address")
    parser.add_argument("-r", "--random", action="store_true", help="Generate a random MAC address")
    return parser.parse_args()


def generate_random_mac():
    random_mac = [0x00, 0x16, 0x3e,
                  random.randint(0x00, 0x7f),
                  random.randint(0x00, 0xff),
                  random.randint(0x00, 0xff)]
    return ":".join(map(lambda x: "%02x" % x, random_mac))


def change_mac(interface, mac):
    print(f"[+] Changing MAC address for network interface {interface}")
    subprocess.run(["ifconfig", interface, "down"])
    subprocess.run(["ifconfig", interface, "hw", "ether", mac])
    subprocess.run(["ifconfig", interface, "up"])


def get_mac(interface):
    ifconfig_result = subprocess.run(["ifconfig", interface], capture_output=True, text=True)
    ifconfig_output = ifconfig_result.stdout
    mac_result = re.search(r"(\w\w:\w\w:\w\w:\w\w:\w\w:\w\w)", ifconfig_output)

    if mac_result:
        return mac_result.group(0)
    else:
        print("[-] Could not read MAC Address.")


def main():
    args = get_args()

    current_mac = get_mac(args.interface)
    print(f"[*] Current MAC: {current_mac}")

    if args.random:
        new_mac = generate_random_mac()
    else:
        new_mac = args.mac

    change_mac(args.interface, new_mac)
    print(f"[+] New MAC: {new_mac}")


if __name__ == "__main__":
    main()
